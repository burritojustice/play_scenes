# Author @patriciogv - 2015

import:
    - https://tangrams.github.io/blocks/global.yaml
    - https://tangrams.github.io/blocks/filter/height.yaml
    - https://www.nextzen.org/carto/refill-style/refill-style.yaml
    # - https://www.nextzen.org/carto/bubble-wrap-style/bubble-wrap.yaml
    # - https://www.nextzen.org/carto/zinc-style/zinc-style.yaml

sources:
    isochrone_polygons:
        type: GeoJSON
        url: https://s3.amazonaws.com/mapzen-assets/images/isochrone/isochrone_polygons.geojson
    # isochrone_lines:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/burritojustice/928315fbb9a318c36cb8f5351cee10ff/raw/8fe29cf90d778c1ae7844442c18b0cfa3cf515d7/mexico_city.geojson
        # isochrone API response saved as geojson for demo purposes

        
    isochrone_live:
        type: GeoJSON
        url: 'https://matrix.mapzen.com/isochrone?json={"locations":[{"lat":40.7178,"lon":-73.9575}],"costing":"transit","contours":[{"time":5},{"time":15},{"time":30},{"time":45}],"polygons":true,"denoise":0.2,"generalize":150,"costing_options":{"transit":{"filters":{"stops":{"ids":["s-dr5rswb4zp-1av<l06n","s-dr5rsrhyn3-3av<l05n","s-dr5rsr9975-unionsq~14st<l03n","s-dr5ru0j0jv-6av<l02n","s-dr5ru02yqu-8av<l01n"],"action":"exclude"}}}}}'
        url_params:
            api_key: mapzen-c4C1Lbb # (be sure to add your API key to pull in polygons from the server https://mapzen.com/developers)
layers:

    isochrone_polygons:
        data: { source: isochrone_live }
        draw:
            polygons:
                order: |
                    function() {
                        return 100 - ((feature.contour/120) * 50) ;
                        }
                color: |
                    function() {
                        return feature.fill;
                        }
                        
            # lines:
            #     order: 4000
            #     color: |
            #         function() {
            #             return feature.fill;
            #             }
            #     width: [[10,2px],[18,10px]]
            #     outline:
            #         color: white
            #         width: [[10,2px],[18,4px]]
                

    roads:
        data: { source: mapzen, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                #color: black
                width: 1px
                order: global.feature_order
                # but give them all the same outline
                outline:
                    style: _outline
                    # color: white
                    # width: 2px
                    # blend: function() { if sdk_data_viz_road_friendly return 'multiply';  else return 'normal'}    


    # isochrone_lines:
    #     data: { source: isochrone_lines}
    #     draw:
    #         lines:
    #             width: 5px
    #             order: 3500
    #             color: |
    #                 function() {
    #                     return feature.color; // 
    #                     }


# styles:
#     _alpha_polygons:
#         base: polygons
#         blend: inlay