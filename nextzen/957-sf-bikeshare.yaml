import: 
    - https://www.nextzen.org/carto/refill-style/8/refill-style.zip
    - https://mapzen-assets.s3.amazonaws.com/resources/demo.yaml
    - https://www.nextzen.org/carto/refill-style/8/themes/detail-6.zip
    # - https://www.nextzen.org/carto/refill-style/8/themes/label-10.zip



sources:
    sf_stations:
        type: GeoJSON
        url: https://gist.githubusercontent.com/burritojustice/db69dae24a12f8e4db0d4b59d28a1853/raw/5653063a5cc8f8c4bd9cb6a4e4d149e832ebfec1/sf_stations.geojson

    sf_voronoi:
        type: GeoJSON
        url: https://gist.githubusercontent.com/burritojustice/db69dae24a12f8e4db0d4b59d28a1853/raw/cb18f8bb557d20969567bc1da66c485248678dbe/sf_bikeshare_voronoi_clipped.geojson
        # url: https://gist.githubusercontent.com/burritojustice/db69dae24a12f8e4db0d4b59d28a1853/raw/5653063a5cc8f8c4bd9cb6a4e4d149e832ebfec1/sf_bikeshare_voronoi.geojson
    isochrone_29th:
        type: GeoJSON
        url: 'https://matrix.mapzen.com/isochrone?json={"locations":[{"lat":37.7440667,"lon":-122.4214722}],"costing":"bicycle","contours":[{"time":5},{"time":10},{"time":15},{"time":20}]}'
        url_params:
            api_key: global.sdk_mapzen_api_key  # (be sure to add your API key to pull in polygons from the server https://mapzen.com/developers)

    venues_29th:
        type: GeoJSON
        url: https://whosonfirst-api.mapzen.com/?method=whosonfirst.places.getNearby
        url_params:
            api_key: global.sdk_mapzen_api_key
            latitude: 37.7440667
            longitude: -122.4214722
            radius: 300
            placetype: venue
            is_current: 1
            # is_ceased: 0
            # is_superseding: 1
            format: geojson
            per_page: 500
            extras: wof:tags,wof:concordances,mz:is_current
            
layers:

                
    _sf_stations:
        data: { source: sf_stations}
        draw:
            _points:
                collide: false
                color: |
                    function(){ 
                        if (feature.station_id == '147'){
                            return [1,0,0,0.7]
                            }
                        else {
                            return [0,0,0,0] 
                            }
                        }
                    
                    
                # color: [0,1,0,0.5]
                # color: |
                #     function(){
                #         if (feature.capacity == 0){
                #             return [0,0,0,0.0]
                #             }
                #         else {
                #             return [0,1,0,0.5]
                #             }                        
                #         }
                # size: 12px
                # size: |
                #     function(){
                #         var size
                #         var capacity
                #         if (feature.capacity == 0){
                #             size = 15
                #             }
                #         else {size = feature.capacity}
                #         return size 
                #         }
                # size: station_id
                # size: capacity
                # size: function(){return feature.capacity}
                outline:
                    # color: grey
                    color:  [0,0,1,0.4]
                            
                    width: 2px
                text:
                    style: _text
                    optional: true
                    collide: false
                    # text_source: function(){return feature.Name}
                    text_source: capacity
                    font:
                        style: bold
                        size: 10px
                        fill: black
                        stroke:
                            color: white
                            width: 3px
                # optional: true
    # _sf_voronoi:
    #     data: {source: sf_voronoi}
    #     draw:
    #         lines:
    #             color: blue
    #             order: 500
    #             width: 2px
    _isochrone_polygons:
        data: { source: isochrone_29th }
        draw:
            lines:
                width: 4px
                order: |
                    function() {
                        return Math.floor(100 - ((feature.contour/120) * 50));
                        }
                color: |
                    function() {
                        return feature.fill;
                        }
    _venues_29th:
        data: {source: venues_29th}
        filter:
            any:
                - $zoom: {min: 15}
                # - 'mz:is_current': 0
        draw:
            _points:
                # color: [1,0,0,0.5]
                color: |
                    function(){
                        if (feature['wof:name'] == "PizzaHacker"){
                            return [0,1,0,0.5]
                            }
                        if (feature["wof:concordances"]["sfgov_rbl:id"] && (feature["mz:is_current"])){
                            return [0,1,0,0.5]
                            }
                        else {return [0,1,1,0.5]}
                        }
                # size: 105x
                outline:
                    width: 2px
                    color: black
                    # color: 
                collide: false
                text:
                    optional: true
                    style: _text
                    # collide: false
                    text_source: wof:name
                    # text_source: |
                    #     function(){
                    #         return feature.wof:concordances.sfgov_rbl:id
                    #         }
                    # text_source: | 
                    #     function(){
                    #         return feature["wof:concordances"]["sfgov_rbl:id"]
                    #         }
                    # text_source: "wof:concordances"."sfgov_rbl:id"
                            
                    font:
                        style: bold
                        size: 10px
                        fill: black
                        stroke:
                            color: white
                            width: 3px


styles:
    _text:
        base: text
        blend_order: 2
    _points:
        base: points
        blend_order: 3